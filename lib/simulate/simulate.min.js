(function(){var b,k,d,n,g,o,nt,f,t,r,tt,it,ct,l,rt,ut,a,ft,s,e,i,et,h,v,lt,y,p,c,ot,w,u,st,ht;c=function(n,t){return t==null&&(t=0),Math.floor(Math.random()*(n+1-t)+t)};ct=!0;i=function(n){var t;return t=$("#msg").text(),$("#msg").text(n+"\n"+t)};n=[];f=0;et=1;r=0;t=[];g=function(){for(var i,t=0,r=n.length;t<r;t++)if(i=n[t],i.load_done===!1)return;return st()};b=function(){function r(n){this.id=n;this.load_done=!1;$.ajax({url:"http://zh.nekowiz.wikia.com/wiki/%E6%A8%A1%E6%9D%BF:Card/Data/"+this.id+"?action=raw",cache:!1,success:function(n){return function(t){var i,f,r,e,u,o;for(f=function(t){var i,r;return i=t.slice(0,t.indexOf("=")),r=t.slice(t.indexOf("=")+1),i!==""?n[i]=r:void 0},u=t.split("|").slice(1,-1),r=0,e=u.length;r<e;r++)i=u[r],f($.trim(i));return n.current_hp=n.max_hp,n.ss_cd=(o=n.ss_cd==="")!=null?o:{0:parseInt(n.ss_cd,10)},n.current_cd=n.ss_cd,n.as_data={},n.ss_data={},$.ajax({url:"http://zh.nekowiz.wikia.com/wiki/Template:Skill/Answer/Data?action=raw",cache:!1,async:!1,success:function(t){var e,o,s,u,h,f,c,r;for(o=t.split("\n"),u=0,r=[],f=0,c=o.length;f<c;f++)i=o[f],i=$.trim(i),i.indexOf("#switch: {{{data}}}")!==-1?(s=i.slice(1,+(i.indexOf("=")-1)+1||9e9),s===n.as?r.push(u=1):r.push(void 0)):u===1?i.indexOf("}}")!==-1?r.push(u=0):(e=i.slice(i.indexOf("|")+1,+(i.indexOf("=")-1)+1||9e9),h=i.slice(i.indexOf("=")+1),e!==""?r.push(n.as_data[e]=h):r.push(void 0)):r.push(void 0);return r}}),$.ajax({url:"http://zh.nekowiz.wikia.com/wiki/Template:Skill/Special/Data?action=raw",cache:!1,async:!1,success:function(t){var e,o,s,u,h,f,c,r;for(o=t.split("\n"),u=0,r=[],f=0,c=o.length;f<c;f++)i=o[f],i=$.trim(i),i.indexOf("#switch: {{{data}}}")!==-1?(s=i.slice(1,+(i.indexOf("=")-1)+1||9e9),s===n.ss?r.push(u=1):r.push(void 0)):u===1?i.indexOf("}}")!==-1?r.push(u=0):(e=i.slice(i.indexOf("|")+1,+(i.indexOf("=")-1)+1||9e9),h=i.slice(i.indexOf("=")+1),e!==""?r.push(n.ss_data[e]=h):r.push(void 0)):r.push(void 0);return r}}),n.buffs=[],n.attack_info={},n.load_done=!0,g()}}(this)})}return r.prototype.get_target_enemy=function(n){var r,t,i,u;if(t=n[0],this.target!==-1&&n[this.target].is_dead()&&(this.target=-1),this.target===-1){for(i=0,u=n.length;i<u;i++)if(r=n[i],!r.is_dead()){t=r;break}}else t=n[this.target];return t},r.prototype.get_combo_ratio=function(){return(100+f)/100},r.prototype.attack=function(n){var t,c,o,l,r,a,v,u,s,y,e,h;if(this.current_hp!==0){for(h=[],a=u=1,e=this.attack_info.atk_times;1<=e?u<=e:u>=e;a=1<=e?++u:--u)if(this.attack_info.target_num===1)v=this.get_target_enemy(n),o=this.attack_info.atk_ratio,this.attack_info.prop_atk.indexOf(r.prop)!==-1&&(o*=this.attack_info.prop_atk_ratio),t=Math.floor(this.max_atk*o*this.get_combo_ratio()),c=v.damage(t,this.prop),i(this.name+" ratio: "+o+", combo: "+f+", atk: "+t+", damage: "+c+", target: "+r.name),this.current_hp+=c*this.attack_info.life_drain,this.current_hp>=this.max_hp&&(this.current_hp=this.max_hp),h.push(this.current_hp=Math.floor(this.current_hp));else{for(t=this.max_atk*this.attack_info.atk_ratio*this.get_combo_ratio(),l=0,s=0,y=n.length;s<y;s++)r=n[s],r.is_dead()||(l+=1);this.attack_info.target_all_average!==0&&(t/=l);t=Math.floor(t);i(this.name+" ratio: "+this.attack_info.atk_ratio+", combo: "+f+", atk: "+t+", target: 全體");h.push(function(){var i,f,u;for(u=[],i=0,f=n.length;i<f;i++)r=n[i],u.push(r.damage(t,this.prop));return u}.call(this))}return h}},r.prototype.attack_info_set=function(t,r){var p,u,e,k,s,h,l,a,v,d,g,nt,tt,w,b,y,o;if(t.indexOf(this.prop)!==-1){if(r){i(this.name+" 卡片發動 AS: "+this.as_data.type);switch(this.as_data.type){case"攻擊上升":return this.attack_info.atk_ratio*=this.as_data.ratio/100;case"連續攻擊":return this.attack_info.atk_ratio*=this.as_data.ratio/100/this.as_data.atks,this.attack_info.atk_times=this.as_data.atks;case"屬性特效":return this.attack_info.prop_atk=this.as_data.elmts,this.attack_info.prop_atk_ratio=this.as_data.ratio;case"全體攻擊（分散）":return this.attack_info.atk_ratio*=this.as_data.ratio,this.attack_info.target_num=5,this.attack_info.target_all_average=1;case"全體攻擊（不分散）":return this.attack_info.atk_ratio*=this.as_data.ratio,this.attack_info.target_num=5,this.attack_info.target_all_average=0;case"賭博攻擊":return this.attack_info.atk_ratio*=c(this.as_data.ratio,100)/100;case"吸收":return this.attack_info.life_drain=this.as_data.ratio/100;case"連段數攻擊上升":if(f>=this.as_data.combo)return this.attack_info.atk_ratio*=this.as_data.ratio/100;break;case"瀕死攻擊上升":if(this.current_hp/this.max_hp<=this.as_data.hp/100)return this.attack_info.atk_ratio*=this.as_data.ratio/100;break;case"快調攻擊上升":if(this.current_hp/this.max_hp>=this.as_data.hp/100)return this.attack_info.atk_ratio*=this.as_data.ratio/100;break;case"隊伍屬性攻擊上升":for(y=[],h=0,d=n.length;h<d;h++)u=n[h],this.as_data.elmts.indexOf(u.prop)!==-1?y.push(u.attack_info.atk_ratio*=this.as_data.ratio/100):y.push(void 0);return y;case"戰鬥不能攻擊上升":for(p=1,l=0,g=n.length;l<g;l++)u=n[l],u.current_hp===0&&(p+=this.as_data.ratio/100);return this.attack_info.atk_ratio*=p;case"問答屬性數攻擊上升":return s="ratio"+et,this.attack_info.atk_ratio*=this.as_data[s];case"屬性的庇佑":for(e={"火":0,"水":0,"雷":0},w=n.slice(0,-1),a=0,nt=w.length;a<nt;a++)u=w[a],e[u.prop]=1;return k=e["火"]+e["水"]+e["雷"],s="ratio"+k,this.attack_info.atk_ratio*=this.as_data[s];case"回復（自身）":if(this.as_data.mode==="%數"?this.current_hp+=this.max_hp*this.as_data.ratio/100:this.as_data.mode==="絕對值"&&(this.current_hp+=this.as_data.ratio),this.current_hp=Math.floor(this.current_hp),this.current_hp>this.max_hp)return this.current_hp=this.max_hp;break;case"回復（隊友）":for(b=n.slice(0,-1),o=[],v=0,tt=b.length;v<tt;v++)u=b[v],this.as_data.elmts.indexOf(u.prop)!==-1&&u.is_dead()===!1?(this.as_data.mode==="%數"?u.current_hp+=u.max_hp*this.as_data.ratio/100:this.as_data.mode==="絕對值"&&(u.current_hp+=this.as_data.ratio),u.current_hp=Math.floor(u.current_hp),u.current_hp>u.max_hp?o.push(u.current_hp=u.max_hp):o.push(void 0)):o.push(void 0);return o}}}else return this.attack_info.atk_ratio=0},r.prototype.target_reset=function(){return this.target=-1},r.prototype.target_set=function(n){return this.target=n},r.prototype.attack_info_reset=function(){return this.attack_info.atk_ratio=1,this.attack_info.target_num=1,this.attack_info.target_all_average=0,this.attack_info.atk_times=1,this.attack_info.prop_atk="",this.attack_info.prop_atk_ratio=1,this.attack_info.life_drain=0},r.prototype.damage=function(n,t){var r;return r=n*y[t][this.prop],r>this.current_hp&&(r=this.current_hp),r=Math.floor(r),this.current_hp-=r,this.is_dead()||i("卡片 "+this.name+" 受到攻擊 HP: "+(this.current_hp+r)+" -> "+this.current_hp),r},r.prototype.damage_percent=function(n){return this.current_hp-=Math.floor(this.current_hp*n)},r.prototype.is_dead=function(){return this.current_hp===0},r.prototype.ss_ready=function(){return this.current_cd===0},r.prototype.use_ss=function(){var u,i,r,f,e,o,s,h,b,k,d,g,nt,tt,it,c,l,a,v,y,p,w;if(this.current_cd===0){switch(this.ss_data.type){case"單體攻擊":f=this.get_target_enemy(t);u=this.max_atk*this.get_combo_ratio();f.damage(u,this.prop);break;case"全體攻擊":for(u=this.max_atk*this.get_combo_ratio(),e=0,b=enemies.length;e<b;e++)r=enemies[e],r.damage(u,this.prop);break;case"單體百分比攻擊":f=this.get_target_enemy(t);f.damage_percent(this.ss_data.ratio/100);break;case"全體百分比攻擊":for(o=0,k=enemies.length;o<k;o++)r=enemies[o],r.damage_percent(this.ss_data.ratio/100);break;case"屬性指定回復":for(v=n.slice(0,-1),s=0,d=v.length;s<d;s++)i=v[s],this.ss_data.elmts.indexOf(i.prop)!==-1&&(i.current_hp+=i.max_hp*this.ss_data.ratio/100,i.current_hp>i.max_hp&&(i.current_hp=i.max_hp));break;case"全體回復":for(y=n.slice(0,-1),h=0,g=y.length;h<g;h++)i=y[h],this.ss_data.mode==="%數"?i.current_hp+=i.max_hp*this.ss_data.ratio/100:this.ss_data.mode==="絕對值"&&(i.current_hp+=this.ss_data.ratio),i.current_hp>i.max_hp&&(i.current_hp=i.max_hp);break;case"復活":for(p=n.slice(0,-1),c=0,nt=p.length;c<nt;c++)i=p[c],this.ss_data.elmts.indexOf(i.prop)!==-1&&i.is_dead()&&(i.current_hp=i.max_hp*this.ss_data.ratio/100);break;case"獻身":for(w=n.slice(0,-1),l=0,tt=w.length;l<tt;l++)i=w[l],i.is_dead()&&(i.current_hp=i.max_hp*this.ss_data.ratio/100);this.current_hp=0;break;case"攻擊回合延遲型":for(a=0,it=enemies.length;a<it;a++)r=enemies[a],r.current_turn+=this.ss_data.neff}return this.current_cd=this.ss_cd}},r}();ft=function(){for(var u,i,r=[],t=i=1;i<=6;t=++i)u=$("#card"+t).val(),r.push(n[t-1]=new b(u));return r};y={"火":{"火":1,"水":.5,"雷":1.5},"水":{"火":1.5,"水":1,"雷":.5},"雷":{"火":.5,"水":1.5,"雷":1}};e={};u=[];p={"封魔級　釋放雷光的禁書":{type:0,stage_number:5,stages:[[[105,7904,1,5,438,[0]]],[[105,7904,1,5,438,[0]],[105,7904,1,5,438,[0]],[104,3796,1,5,263,[0]]],[[104,3796,1,5,263,[0]],[105,7904,1,5,438,[0]],[104,3796,1,5,263,[0]]]],boss:[[105,7904,1,5,438,[0]],[105,7904,1,5,438,[0]],[105,7904,1,5,438,[0]]],monsters:{104:{name:"閃電之魔導書",prop:"雷"},105:{name:"閃耀雷電之亞力克‧格林",prop:"雷"}}}};ot=function(n){var i,t;return i=n+1,t=n-1,t<=0&&(t=1),c(i,t)};k=function(){function t(n){this.id=n[0];this.max_hp=n[1];this.current_hp=n[1];this.turn=n[2];this.current_turn=ot(n[2]);this.target=n[3];this.atk=n[4];this.ai=n[5];this.name=e[this.id].name;this.prop=e[this.id].prop;this.current_ai_index=0;this.buffs=[]}return t.prototype.is_dead=function(){return this.current_hp===0},t.prototype.damage=function(n,t){var r;return r=n*y[t][this.prop],r>this.current_hp&&(r=this.current_hp),r=Math.floor(r),this.current_hp-=r,this.is_dead||i("敵人 "+this.name+" 受到攻擊 HP: "+(this.current_hp+r)+" -> "+this.current_hp),r},t.prototype.damage_percent=function(n){return this.current_hp-=Math.floor(this.current_hp*n)},t.prototype.one_turn_pass=function(){if(!this.is_dead())return this.current_turn-=1},t.prototype.use_skill=function(){var n;return n=this.ai[this.current_ai_index],this.current_ai_index+=1,this.current_ai_index%=this.ai.length},t.prototype.attack=function(){var f,o,t,r,s,e,u;if(o=this.ai[this.current_ai_index],o===0){for(f=0,e=[0,1,2,3,4].sort(function(){return.5-Math.random()}),u=[],r=0,s=e.length;r<s;r++){if(t=e[r],f===this.target)break;n[t].is_dead()?u.push(void 0):(i("敵人 "+this.name+" 攻擊"+n[t].name+" atk: "+this.atk),n[t].damage(this.atk,this.prop),u.push(f+=1))}return u}},t}();rt=function(){for(var n,r,u,f,s,h,c,e,i=0,o=t.length;i<o;i++)n=t[i],n.one_turn_pass();for(r=0,s=t.length;r<s;r++)n=t[r],n.current_turn===0&&n.use_skill();for(u=0,h=t.length;u<h;u++)n=t[u],n.current_turn===0&&n.attack();for(e=[],f=0,c=t.length;f<c;f++)n=t[f],n.current_turn===0?e.push(n.current_turn=n.turn):e.push(void 0);return e};ut=function(n){var t;return function(){var i,u,r;for(r=[],i=0,u=n.length;i<u;i++)t=n[i],r.push(new k(t));return r}()};o=function(n){for(var i,t=0,r=n.length;t<r;t++)if(i=n[t],!i.is_dead())return!1;return!0};nt=function(){for(var i,t=0,r=n.length;t<r;t++)if(i=n[t],!i.is_dead())return!1;return!0};l=function(){for(var i,u,r=[],t=u=1;u<=6;t=++u)i="#skill_"+t,$(i).text(n[t-1].ss),n[t-1].ss_ready()?r.push($(i).attr("disabled",!1)):r.push($(i).attr("disabled",!0));return r};it=function(){for(var r,t,i=[],n=t=1;t<=7;n=++t)r="#attack_"+n,i.push($(r).attr("disabled",!1));return i};tt=function(){for(var r,t,i=[],n=t=1;t<=7;n=++t)r="#attack_"+n,i.push($(r).attr("disabled",!0));return i};v=function(){return a(),l(),it()};ht=function(f){var e;return f-=1,e=n[f],e.use_ss(),s(),o(t)&&(i("關卡 "+(r+1)+" 過關"),r+=1,r>=u.length?w():h(u[r])),l()};lt=function(t,i){var e,r,o,u,f;for(i==null&&(i=!0),u=n.slice(0,-1),f=[],r=0,o=u.length;r<o;r++)e=u[r],f.push(e.attack(t,i));return f};h=function(u){var e,f,o;for(t=ut(u),s(),i("第 "+(r+1).toString()+" 關敵人讀取完畢"),f=0,o=n.length;f<o;f++)e=n[f],e.target_reset();return v()};a=function(){for(var u,f,e,o,i,r=[],t=i=1;i<=6;t=++i)f="#card"+t+"_hp",u="#card"+t+"_atk",e="#card"+t,o="#card"+t+"_name",$(f).val(n[t-1].current_hp),$(u).val(n[t-1].max_atk),$(e).val(n[t-1].id),r.push($(o).val(n[t-1].name));return r};s=function(){var i,r,n,u,f,e,s,o;for(n=1,e=0,s=t.length;e<s;e++)i=t[e],r="#enemy"+n+"_hp",u="#enemy"+n+"_name",f="#enemy"+n+"_turn",$(r).val(i.current_hp),$(u).val(i.name),$(f).val(i.current_turn),n+=1;for(o=[];n<=3;)r="#enemy"+n+"_hp",u="#enemy"+n+"_name",f="#enemy"+n+"_turn",$(r).val(""),$(u).val(""),$(f).val(""),o.push(n+=1);return o};st=function(){var o,n,s,t,f;if(u=[],e={},a(),i("卡片讀取完畢，讀取關卡資料..."),s=$("#quest").val(),n=p[s],p[s].type===0){for(o=t=1,f=n.stage_number-1;1<=f?t<=f:t>=f;o=1<=f?++t:--t)u[o-1]=n.stages[c(n.stages.length-1,0)];u[n.stage_number-1]=n.boss}else u=n.stages;return e=n.monsters,i("關卡資料讀取完畢，進入遊戲"),r=0,h(u[r])};w=function(){return i("全部關卡皆已過關!!")};d=function(e){var b,c,l,ft,a,y,p,k,et,ot,st,ht,d,g,it,ut;for(f+=1,tt(),b=$("#as_enable").is(":checked"),i("攻擊屬性: "+e+", AS: "+b),d=n.slice(0,-1),a=0,et=d.length;a<et;a++)c=d[a],c.attack_info_reset();for(g=n.slice(0,-1),y=0,ot=g.length;y<ot;y++)c=g[y],c.attack_info_set(e,b);for(it=n.slice(0,-1),p=0,st=it.length;p<st;p++)if(c=it[p],c.attack(t),o(t))break;if(s(),o(t))return i("關卡 "+(r+1)+" 過關"),r+=1,r>=u.length?w():h(u[r]);if(i("攻擊結束，敵人的回合"),rt(),!n[5].is_dead())for(ut=n.slice(0,-1),l=k=0,ht=ut.length;k<ht;l=++k)if(c=ut[l],c.is_dead()){i("卡片死亡，援助進入");ft=n[5];n[5]=n[l];n[l]=ft;break}return nt()?(i("全部卡片都死亡，過關失敗"),console.log("Stage failed!!")):(i("攻擊結束，玩家的回合"),v())};$(function(){var n,t,i,r,u;$("#load_card").on("click",function(){return ft()});for(n=i=1;i<=7;n=++i){t="#attack_"+n;$(t).on("click",function(){return d($(this).text())})}for(u=[],n=r=1;r<=6;n=++r)t="#skill_"+n,u.push($(t).on("click",function(n){return function(){return ht(n)}}(n)));return u})}).call(this);
/*
//# sourceMappingURL=simulate.min.js.map
*/